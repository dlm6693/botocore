#!/usr/bin/env python
# Don't run tests from the root repo dir.
# We want to ensure we're importing from the installed
# binary package not from the CWD.

import argparse
import os
import sys
from contextlib import contextmanager
from subprocess import check_call

import botocore
import zipfile
import zipimport

_dname = os.path.dirname

REPO_ROOT = _dname(_dname(_dname(os.path.abspath(__file__))))
PACKAGE = "botocore"


@contextmanager
def cd(path):
    """Change directory while inside context manager."""
    cwd = os.getcwd()
    try:
        os.chdir(path)
        yield
    finally:
        os.chdir(cwd)


def run(command):
    return check_call(command, shell=True)


def check_state():
    zip_loader = isinstance(botocore.__loader__, zipimport.zipimporter)
    zip_file = os.path.join('botocore.zip', 'botocore', '/__init__.py') in botocore.__file__
    zip_path = isinstance(botocore.BOTOCORE_ROOT, zipfile.Path)
    zipped_state = (zip_loader, zip_file, zip_path)
    if not all(zipped_state):
        print("Botocore is not loaded in a zipped context")
        print(botocore.__loader__)
        print(botocore.__file__)
        print(botocore.BOTOCORE_ROOT)
        print(sys.path)
        try:
            print(os.environ['PYTHONPATH'])
        except:
            pass

        sys.exit(1)


if __name__ == "__main__":
    check_state()
    with cd(os.path.join(REPO_ROOT, "tests")):
        test_script = os.sep.join([REPO_ROOT, 'scripts', 'ci', 'run-tests'])
        run(f"python {test_script} unit functional")
